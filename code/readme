 
 #Preprocessing 
 
 B 

 #Distortion function
 
 Given ideal image coordinates (x, y) and parameters of rational distortion model
 A1_row, A2_row, A3_row returns distorted image coordinates (i, j)

 Before applying distortion and undistortion we normalize and center points for stability
 x_norm = (x - image_width/2) / (image_width + image_height)
 y_norm = (y - image_height/2) / (image_width + image_height)

 Rational distortion model is described by following equation

 chi_row = [ i^2, i*j, j^2, i, j, 1]

 	   A1_row * chi_row'
 x = -----------------
 	   A3_row * chi_row'

 	 A2_row * chi_row'
 y = -----------------
     A3_row * chi_row'

 From this equation it follows that for every distorted coordinates (i, j), there is a unique pair of
 undistorted coordinates (x, y). However, converse is not true. To find distorted coordinates from
 ideal coordinates we need to solve system of equations, that potentially has several solutions.

 To find unique distorted coordinates we use the fact that lens distortions are not very large. It allows
 us to use Newton method, described below.

 Lets define vector function

 F_vec(i,j) = [ x - ( A1_row * chi_row' ) / ( A3_row * chi_row' ) ]
 	          [ y - ( A2_row * chi_row' ) / ( A3_row * chi_row' ) ]

 This function has Jacobian

 dchi_row/di = [2i  j  0   1 0 0]
 dchi_row/dj = [0   i  2j  0 1 0]

 J(i,j) = [ - ( (A1_row*dchi_row/di')*(A3_row*chi_row') - (A1_row*chi_row')*(A3_row*dchi_row/di) ) / (A3_row*chi_row')^2,...
            - ( (A1_row*dchi_row/dj')*(A3_row*chi_row') - (A1_row*chi_row')*(A3_row*dchi_row/dj) ) / (A3_row*chi_row')^2;...
            - ( (A2_row*dchi_row/di')*(A3_row*chi_row') - (A2_row*chi_row')*(A3_row*dchi_row/di) ) / (A3_row*chi_row')^2,...
            - ( (A2_row*dchi_row/dj')*(A3_row*chi_row') - (A2_row*chi_row')*(A3_row*dchi_row/dj) ) / (A3_row*chi_row')^2]

 J(i,j) = [ - ( (A1_row*dchi_row/di') - (x_predicted)*(A3_row*dchi_row/di) ) / (A3_row*chi_row'),...
            - ( (A1_row*dchi_row/dj') - (x_predicted)*(A3_row*dchi_row/dj) ) / (A3_row*chi_row');...
            - ( (A2_row*dchi_row/di') - (y_predicted)*(A3_row*dchi_row/di) ) / (A3_row*chi_row'),...
            - ( (A2_row*dchi_row/dj') - (y_predicted)*(A3_row*dchi_row/dj) ) / (A3_row*chi_row')]


 Than single iteration of Newton Method

 [i_n, j_n]  = [i_n-1, j_n-1] - inv(J(i_n-1, j_n-1))*F(i_n-1, j_n-1);

 Where
                    1             [  J22 -J12 ] [ F11 ]   [  J22*F11 - F12*J12 ]
 inv(J)*F =  ------------------ * [ -J21  J11 ] [ F12 ] = [ -J21*F11 + J11*F12 ]
             J11*J22 - J12*J21
